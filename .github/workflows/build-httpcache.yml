name: Build HttpCache

on:
  push:
    branches: [ main ]
    paths:
      - 'HttpCache/**'
      - 'HttpCache.Data/**'
      - 'HttpCache.sln'
      - '.github/workflows/build-httpcache.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'HttpCache/**'
      - 'HttpCache.Data/**'
      - 'HttpCache.sln'
      - '.github/workflows/build-httpcache.yml'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore HttpCache/HttpCache.csproj

      - name: Build project
        run: dotnet build HttpCache/HttpCache.csproj --configuration Release --no-restore

      - name: Test
        run: dotnet test HttpCache/HttpCache.csproj --configuration Release --no-build --verbosity normal

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/httpcache
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: src/
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max